/*
 * This file is generated by jOOQ.
*/
package fi.alekster.classical.db.tables.records;


import fi.alekster.classical.db.tables.Watchdog;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WatchdogRecord extends UpdatableRecordImpl<WatchdogRecord> implements Record5<Long, String, Timestamp, Timestamp, String> {

    private static final long serialVersionUID = -2082210170;

    /**
     * Setter for <code>public.watchdog.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.watchdog.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.watchdog.email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.watchdog.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.watchdog.start_date</code>.
     */
    public void setStartDate(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.watchdog.start_date</code>.
     */
    public Timestamp getStartDate() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>public.watchdog.end_date</code>.
     */
    public void setEndDate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.watchdog.end_date</code>.
     */
    public Timestamp getEndDate() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>public.watchdog.key_phrase</code>.
     */
    public void setKeyPhrase(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.watchdog.key_phrase</code>.
     */
    public String getKeyPhrase() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, Timestamp, Timestamp, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, String, Timestamp, Timestamp, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Watchdog.WATCHDOG.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Watchdog.WATCHDOG.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return Watchdog.WATCHDOG.START_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Watchdog.WATCHDOG.END_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Watchdog.WATCHDOG.KEY_PHRASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getKeyPhrase();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatchdogRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatchdogRecord value2(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatchdogRecord value3(Timestamp value) {
        setStartDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatchdogRecord value4(Timestamp value) {
        setEndDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatchdogRecord value5(String value) {
        setKeyPhrase(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatchdogRecord values(Long value1, String value2, Timestamp value3, Timestamp value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WatchdogRecord
     */
    public WatchdogRecord() {
        super(Watchdog.WATCHDOG);
    }

    /**
     * Create a detached, initialised WatchdogRecord
     */
    public WatchdogRecord(Long id, String email, Timestamp startDate, Timestamp endDate, String keyPhrase) {
        super(Watchdog.WATCHDOG);

        set(0, id);
        set(1, email);
        set(2, startDate);
        set(3, endDate);
        set(4, keyPhrase);
    }
}
