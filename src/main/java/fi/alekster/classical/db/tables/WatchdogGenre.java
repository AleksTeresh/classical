/*
 * This file is generated by jOOQ.
*/
package fi.alekster.classical.db.tables;


import fi.alekster.classical.db.Keys;
import fi.alekster.classical.db.Public;
import fi.alekster.classical.db.tables.records.WatchdogGenreRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WatchdogGenre extends TableImpl<WatchdogGenreRecord> {

    private static final long serialVersionUID = -1804817419;

    /**
     * The reference instance of <code>public.watchdog_genre</code>
     */
    public static final WatchdogGenre WATCHDOG_GENRE = new WatchdogGenre();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WatchdogGenreRecord> getRecordType() {
        return WatchdogGenreRecord.class;
    }

    /**
     * The column <code>public.watchdog_genre.watchdog_id</code>.
     */
    public final TableField<WatchdogGenreRecord, Long> WATCHDOG_ID = createField("watchdog_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.watchdog_genre.genre_id</code>.
     */
    public final TableField<WatchdogGenreRecord, Long> GENRE_ID = createField("genre_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.watchdog_genre</code> table reference
     */
    public WatchdogGenre() {
        this("watchdog_genre", null);
    }

    /**
     * Create an aliased <code>public.watchdog_genre</code> table reference
     */
    public WatchdogGenre(String alias) {
        this(alias, WATCHDOG_GENRE);
    }

    private WatchdogGenre(String alias, Table<WatchdogGenreRecord> aliased) {
        this(alias, aliased, null);
    }

    private WatchdogGenre(String alias, Table<WatchdogGenreRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WatchdogGenreRecord> getPrimaryKey() {
        return Keys.PK_WATCHDOG_GENRE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WatchdogGenreRecord>> getKeys() {
        return Arrays.<UniqueKey<WatchdogGenreRecord>>asList(Keys.PK_WATCHDOG_GENRE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<WatchdogGenreRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<WatchdogGenreRecord, ?>>asList(Keys.WATCHDOG_GENRE__FK_WATCHDOG_GENRE_WATCHDOG, Keys.WATCHDOG_GENRE__FK_WATCHDOG_GENRE_GENRE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WatchdogGenre as(String alias) {
        return new WatchdogGenre(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WatchdogGenre rename(String name) {
        return new WatchdogGenre(name, null);
    }
}
