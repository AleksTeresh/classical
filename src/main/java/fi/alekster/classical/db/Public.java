/*
 * This file is generated by jOOQ.
*/
package fi.alekster.classical.db;


import fi.alekster.classical.db.tables.Author;
import fi.alekster.classical.db.tables.Databasechangelog;
import fi.alekster.classical.db.tables.Databasechangeloglock;
import fi.alekster.classical.db.tables.Genre;
import fi.alekster.classical.db.tables.Gig;
import fi.alekster.classical.db.tables.Performance;
import fi.alekster.classical.db.tables.Venue;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 725043713;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.author</code>.
     */
    public final Author AUTHOR = fi.alekster.classical.db.tables.Author.AUTHOR;

    /**
     * The table <code>public.databasechangelog</code>.
     */
    public final Databasechangelog DATABASECHANGELOG = fi.alekster.classical.db.tables.Databasechangelog.DATABASECHANGELOG;

    /**
     * The table <code>public.databasechangeloglock</code>.
     */
    public final Databasechangeloglock DATABASECHANGELOGLOCK = fi.alekster.classical.db.tables.Databasechangeloglock.DATABASECHANGELOGLOCK;

    /**
     * The table <code>public.genre</code>.
     */
    public final Genre GENRE = fi.alekster.classical.db.tables.Genre.GENRE;

    /**
     * The table <code>public.gig</code>.
     */
    public final Gig GIG = fi.alekster.classical.db.tables.Gig.GIG;

    /**
     * The table <code>public.performance</code>.
     */
    public final Performance PERFORMANCE = fi.alekster.classical.db.tables.Performance.PERFORMANCE;

    /**
     * The table <code>public.venue</code>.
     */
    public final Venue VENUE = fi.alekster.classical.db.tables.Venue.VENUE;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.AUTHOR_ID_SEQ,
            Sequences.GENRE_ID_SEQ,
            Sequences.GIG_ID_SEQ,
            Sequences.PERFORMANCE_ID_SEQ,
            Sequences.VENUE_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Author.AUTHOR,
            Databasechangelog.DATABASECHANGELOG,
            Databasechangeloglock.DATABASECHANGELOGLOCK,
            Genre.GENRE,
            Gig.GIG,
            Performance.PERFORMANCE,
            Venue.VENUE);
    }
}
